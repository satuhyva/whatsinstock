{"version":3,"sources":["components/ProductPageToggler.js","warehouseStyles.js","components/ColorDots.js","components/ProductListRow.js","components/ProductList.js","components/StockStatusIconInfo.js","services/service.js","helperFunctions/fetchDataFunctions.js","App.js","index.js"],"names":["ProductPageToggler","selectedProductGroup","setSelectedProductGroup","ToggleButtonGroup","value","exclusive","onChange","event","newSelection","map","productGroup","ToggleButton","Typography","createStyles","makeStyles","app","display","flexDirection","justifyContent","alignItems","margin","iconInfoContainer","marginTop","padding","infoRow","inStock","color","outOfStock","productRow","backgroundColor","borderRadius","marginBottom","productDetailsBox","marginLeft","productDetailsContainer","dotsContainer","ColoredDot","dotColor","style","width","height","getDots","product","dots","length","forEach","push","id","ColorDots","classes","className","ProductListRow","stockStatus","productDetails","price","concat","manufacturer","name","ProductList","products","availabilities","WIDTH","Math","min","window","innerWidth","HEIGHT","innerHeight","error","itemCount","itemSize","index","status","undefined","StockStatusIconInfo","baseUrl","fetchProductData","a","axios","get","response","data","fetchManufacturerData","getProductDataSortAlphabetically","fetchedData","sortedData","sort","b","localeCompare","getManufacturerData","getManufacturerSet","productGroups","manufacturers","Set","group","item","add","getIdManufacturerDictionary","promiseArray","idAndManufacturerDictionary","Promise","all","oneManufacturerResults","itemData","toLowerCase","DATAPAYLOAD","toString","indexOf","setJackets","setShirts","setAccessories","setAvailabilities","jacketsData","shirtsData","accessoriesData","idManufacturerDictionary","App","useState","jackets","shirts","accessories","UPDATE_INTERVAL","useEffect","fetchAndSetProductAndManufacturerData","interval","setInterval","updateProductAndManufacturerData","clearInterval","variant","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sLAqCeA,EA9BY,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,qBAAsBC,EAA8B,EAA9BA,wBAQhD,OACI,8BACI,cAACC,EAAA,EAAD,CACIC,MAAOH,EACPI,WAAS,EACTC,SAXmB,SAACC,EAAOC,GACnCN,EAAwBM,IAOpB,SALc,CAAC,UAAW,SAAU,eAUjBC,KAAI,SAAAC,GACf,OACI,cAACC,EAAA,EAAD,CAAcP,MAAOM,EAArB,SACI,cAACE,EAAA,EAAD,UACKF,KAF+BA,W,2DCqCjDG,EA3DMC,YAAW,CAC5BC,IAAK,CACDC,QAAS,OACTC,cAAe,SACfC,eAAgB,aAChBC,WAAY,SACZC,OAAQ,IAEZC,kBAAmB,CACfL,QAAS,OACTC,cAAe,SACfC,eAAgB,aAChBC,WAAY,OACZG,UAAW,GACXC,QAAS,GAEbC,QAAS,CACLR,QAAS,OACTC,cAAe,MACfC,eAAgB,cAEpBO,QAAS,CACLC,MAAO,SAEXC,WAAY,CACRD,MAAO,OAEXE,WAAY,CACRZ,QAAS,OACTC,cAAe,MACfC,eAAgB,aAChBC,WAAY,SACZU,gBAAiB,UACjBC,aAAc,EACdC,aAAc,EACdR,QAAS,GAEbS,kBAAmB,CACfhB,QAAS,OACTC,cAAe,SACfC,eAAgB,aAChBC,WAAY,OACZc,WAAY,GAEhBC,wBAAyB,CACrBlB,QAAS,OACTC,cAAe,MACfC,eAAgB,aAChBC,WAAY,UAEhBgB,cAAe,CACXnB,QAAS,OACTC,cAAe,MACfC,eAAgB,aAChBe,WAAY,MCpDdG,EAAa,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAClB,OACI,qBAAKC,MAAO,CAAEC,MAAO,GAAIC,OAAQ,GAAIV,aAAc,EAAGD,gBAAiBQ,EAAUJ,WAAY,MAK/FQ,EAAU,SAACC,GACb,IAAIC,EAAO,GAMX,OALID,EAAQhB,OAASgB,EAAQhB,MAAMkB,OAAS,GACxCF,EAAQhB,MAAMmB,SAAQ,SAAAnB,GAClBiB,EAAKG,KAAK,cAAC,EAAD,CAAYT,SAAUX,GAAYA,EAAQgB,EAAQK,QAG7DJ,GAiBIK,EAXG,SAAC,GAAiB,IAAfN,EAAc,EAAdA,QAEXO,EAAUpC,IAEhB,OACI,qBAAKqC,UAAWD,EAAQd,cAAxB,SACKM,EAAQC,MCUNS,EA9BQ,SAAC,GAA8B,IAA5BT,EAA2B,EAA3BA,QAASU,EAAkB,EAAlBA,YAEzBH,EAAUpC,IAEZwC,EAAiB,GAKrB,OAJIX,EAAQY,QAAOD,EAAiBA,EAAeE,OAAOb,EAAQY,MAAO,cACrEZ,EAAQc,eAAcH,EAAiBA,EAAeE,OAAO,IAAKb,EAAQc,aAAc,MAIxF,sBAAKN,UAAWD,EAAQrB,WAAxB,UACqB,OAAhBwB,EACG,cAAC,IAAD,IAEAA,EACI,cAAC,IAAD,CAAwBF,UAAWD,EAAQxB,UAE3C,cAAC,IAAD,CAA0ByB,UAAWD,EAAQtB,aAErD,sBAAKuB,UAAWD,EAAQjB,kBAAxB,UACI,8BAAMU,EAAQe,OACd,sBAAKP,UAAWD,EAAQf,wBAAxB,UACKmB,EACD,cAAC,EAAD,CAAWX,QAASA,c,QCazBgB,EAxCK,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,eAEvBC,EAAQC,KAAKC,IAAwB,GAApBC,OAAOC,WAAkB,KAC1CC,EAA8B,IAArBF,OAAOG,YAGtB,GAAIR,EAASS,MACT,OACI,cAACxD,EAAA,EAAD,UAAa+C,EAASS,QAiB9B,OACI,qBAAK9B,MAAO,CAAElB,OAAQ,GAAtB,SACI,cAAC,IAAD,CACI8B,UAAU,OACVV,OAAQ0B,EACRG,UAAWV,EAASf,OACpB0B,SA3BQ,GA4BR/B,MAAOsB,EALX,SAfI,SAAC,GAAsB,IAApBU,EAAmB,EAAnBA,MAAOjC,EAAY,EAAZA,MACZI,EAAUiB,EAASY,GACnBC,EAA4B,OAAnBZ,QAA0Da,IAA/Bb,EAAelB,EAAQK,IAC7D,KAEAa,EAAelB,EAAQK,IAC3B,OACI,qBAAKT,MAAOA,EAAZ,SACI,cAAC,EAAD,CAAiCI,QAASA,EAASU,YAAaoB,GAA3C9B,EAAQK,YCM9B2B,EAvBa,WAExB,IAAMzB,EAAUpC,IAEhB,OACI,sBAAKqC,UAAWD,EAAQ5B,kBAAxB,UACI,sBAAK6B,UAAWD,EAAQzB,QAAxB,UACI,cAAC,IAAD,IACA,cAACZ,EAAA,EAAD,+CAEJ,sBAAKsC,UAAWD,EAAQzB,QAAxB,UACI,cAAC,IAAD,CAA0B0B,UAAWD,EAAQtB,aAC7C,cAACf,EAAA,EAAD,8BAEJ,sBAAKsC,UAAWD,EAAQzB,QAAxB,UACI,cAAC,IAAD,CAAwB0B,UAAWD,EAAQxB,UAC3C,cAACb,EAAA,EAAD,8B,yCCvBV+D,EAAU,yCAGHC,EAAgB,uCAAG,WAAOlE,GAAP,eAAAmE,EAAA,sEACLC,IAAMC,IAAN,UAAaJ,EAAb,qBAAiCjE,IAD5B,cACtBsE,EADsB,yBAErBA,EAASC,MAFY,2CAAH,sDAMhBC,EAAqB,uCAAG,WAAO1B,GAAP,eAAAqB,EAAA,sEAMVC,IAAMC,IAAN,UAAaJ,EAAb,yBAAqCnB,IAN3B,cAM3BwB,EAN2B,yBAQ1BA,EAASC,MARiB,2CAAH,sD,SCRnBE,E,8EAAf,WAAgDzE,GAAhD,iBAAAmE,EAAA,+EAEkCD,EAAiBlE,GAFnD,cAEc0E,EAFd,OAGcC,EAAaD,EAAYE,MAAK,SAACT,EAAGU,GAAJ,OAAUV,EAAEpB,KAAK+B,cAAcD,EAAE9B,SAH7E,kBAIe4B,GAJf,yDAMe,CAAEjB,MAAM,wBAAD,OAA0B1D,EAA1B,YANtB,0D,+BAUe+E,E,8EAAf,WAAmCjC,GAAnC,eAAAqB,EAAA,+EAEkCK,EAAsB1B,GAFxD,UAGqC,QADvB4B,EAFd,QAGwBJ,SAHxB,yCAGkD,IAHlD,gCAIeI,EAAYJ,UAJ3B,yDAMe,IANf,0D,sBAWA,SAASU,EAAmBC,GACxB,IAAIC,EAAgB,IAAIC,IAQxB,OAPAF,EAAc9C,SAAQ,SAAAiD,GAClBA,EAAMjD,SAAQ,SAAAkD,GACLA,EAAK3B,OACNwB,EAAcI,IAAID,EAAKvC,oBAI5BoC,E,SAGIK,E,8EAAf,WAA2CL,GAA3C,iBAAAf,EAAA,6DACQqB,EAAe,GACnBN,EAAc/C,SAAQ,SAAAW,GAClB0C,EAAapD,KAAK2C,EAAoBjC,OAEtC2C,EAA8B,GALtC,SAMsCC,QAAQC,IAAIH,GANlD,qBAOwBrD,SAAQ,SAAAyD,GACxBA,EAAuBzD,SAAQ,SAAA0D,GAC3BJ,EAA4BI,EAASxD,GAAGyD,gBAA2E,IAA1DD,EAASE,YAAYC,WAAWC,QAAQ,mBAT7G,kBAYWR,GAZX,4C,kEAiBO,WAAqDS,EAAYC,EAAWC,EAAgBC,GAA5F,uBAAAlC,EAAA,sEACuBM,EAAiC,WADxD,cACG6B,EADH,OAEHJ,EAAWI,GAFR,SAGsB7B,EAAiC,UAHvD,cAGG8B,EAHH,OAIHJ,EAAUI,GAJP,UAK2B9B,EAAiC,eAL5D,eAKG+B,EALH,OAMHJ,EAAeI,GAEXtB,EAAgBF,EAAmB,CAACsB,EAAaC,EAAYC,IAR9D,UASoCjB,EAA4BL,GAThE,QASGuB,EATH,OAUHJ,EAAkBI,GAVf,6C,kEAcA,WAAgDP,EAAYC,EAAWC,EAAgBC,GAAvF,uBAAAlC,EAAA,sEACuBM,EAAiC,WADxD,cACG6B,EADH,gBAEsB7B,EAAiC,UAFvD,cAEG8B,EAFH,gBAG2B9B,EAAiC,eAH5D,cAGG+B,EAHH,OAICtB,EAAgBF,EAAmB,CAACsB,EAAaC,EAAYC,IAJ9D,UAKoCjB,EAA4BL,GALhE,QAKGuB,EALH,OAMHP,EAAWI,GACXH,EAAUI,GACVH,EAAeI,GACfH,EAAkBI,GATf,6C,sBC1DP,IAoDeC,EApDH,WAAO,IAAD,EAEgBC,mBAAS,MAFzB,mBAEPC,EAFO,KAEEV,EAFF,OAGcS,mBAAS,MAHvB,mBAGPE,EAHO,KAGCV,EAHD,OAIwBQ,mBAAS,MAJjC,mBAIPG,EAJO,KAIMV,EAJN,OAM8BO,mBAAS,MANvC,mBAMPzD,EANO,KAMSmD,EANT,OAO0CM,mBAAS,MAPnD,mBAOPpH,EAPO,KAOeC,EAPf,KASR+C,EAAUpC,IACV4G,EAAkB,IAkBxB,OAdAC,qBAAU,YD8BP,SAAP,iCC7BQC,CAAsCf,EAAYC,EAAWC,EAAgBC,KAC9E,IAIHW,qBAAU,WACN,IAAME,EAAWC,aAAY,YDqC9B,SAAP,iCCpCYC,CAAiClB,EAAYC,EAAWC,EAAgBC,KACzEU,GACH,OAAO,kBAAMM,cAAcH,MAC5B,CAACH,IAIA,sBAAKvE,UAAWD,EAAQlC,IAAxB,UAEI,cAACH,EAAA,EAAD,CAAYoH,QAAQ,KAApB,8BAGA,cAACpH,EAAA,EAAD,+CACA,cAAC,EAAD,CAAoBX,qBAAsBA,EAAsBC,wBAAyBA,IAE/D,YAAzBD,GAAkD,OAAZqH,GAAoB,cAAC,EAAD,CAAa3D,SAAU2D,EAAS1D,eAAgBA,IACjF,WAAzB3D,GAAgD,OAAXsH,GAAmB,cAAC,EAAD,CAAa5D,SAAU4D,EAAQ3D,eAAgBA,IAC9E,gBAAzB3D,GAA0D,OAAhBuH,GAAwB,cAAC,EAAD,CAAa7D,SAAU6D,EAAa5D,eAAgBA,IAE7F,OAAzB3D,GACG,qCACI,cAACW,EAAA,EAAD,6CACA,cAAC,EAAD,WChDpBqH,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.5c207d1a.chunk.js","sourcesContent":["import React from 'react'\nimport ToggleButton from '@material-ui/lab/ToggleButton'\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup'\nimport Typography from '@material-ui/core/Typography'\n\n\n\nconst ProductPageToggler = ({ selectedProductGroup, setSelectedProductGroup }) => {\n\n    const handleSelectionChanged = (event, newSelection) => {\n        setSelectedProductGroup(newSelection)\n    }\n    const productGroups = ['jackets', 'shirts', 'accessories']\n\n\n    return (\n        <div>\n            <ToggleButtonGroup\n                value={selectedProductGroup}\n                exclusive\n                onChange={handleSelectionChanged}\n            >\n                {productGroups.map(productGroup => {\n                    return (\n                        <ToggleButton value={productGroup} key={productGroup}>\n                            <Typography>\n                                {productGroup}\n                            </Typography>\n                        </ToggleButton>\n                    )\n                })}\n            </ToggleButtonGroup>\n        </div>\n\n    )\n}\n\nexport default ProductPageToggler\n\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst createStyles = makeStyles({\n    app: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        margin: 10,\n    },\n    iconInfoContainer: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'flex-start',\n        alignItems: 'left',\n        marginTop: 10,\n        padding: 3,\n    },\n    infoRow: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'flex-start',\n    },\n    inStock: {\n        color: 'green',\n    },\n    outOfStock: {\n        color: 'red',\n    },\n    productRow: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        backgroundColor: '#e7e7e4',\n        borderRadius: 6,\n        marginBottom: 3,\n        padding: 3,\n    },\n    productDetailsBox: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'flex-start',\n        alignItems: 'left',\n        marginLeft: 3,\n    },\n    productDetailsContainer: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n    },\n    dotsContainer: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'flex-start',\n        marginLeft: 10,\n    },\n\n})\n\nexport default createStyles\n\n\n","import React from 'react'\nimport createStyles from '../warehouseStyles'\n\n\nconst ColoredDot = ({ dotColor }) => {\n    return (\n        <div style={{ width: 10, height: 10, borderRadius: 5, backgroundColor: dotColor, marginLeft: 3 }}/>\n    )\n}\n\n\nconst getDots = (product) => {\n    let dots = []\n    if (product.color && product.color.length > 0) {\n        product.color.forEach(color => {\n            dots.push(<ColoredDot dotColor={color} key={color + product.id}/>)\n        })\n    }\n    return dots\n}\n\n\n\n\nconst ColorDots = ({ product }) => {\n\n    const classes = createStyles()\n\n    return (\n        <div className={classes.dotsContainer}>\n            {getDots(product)}\n        </div>\n    )\n}\n\nexport default ColorDots\n\n","import React from 'react'\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked'\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked'\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline'\nimport createStyles from '../warehouseStyles'\nimport ColorDots from './ColorDots'\n\n\n\n\nconst ProductListRow = ({ product, stockStatus }) => {\n\n    const classes = createStyles()\n\n    let productDetails = ''\n    if (product.price) productDetails = productDetails.concat(product.price, '€   ')\n    if (product.manufacturer) productDetails = productDetails.concat('(', product.manufacturer, ')')\n\n\n    return (\n        <div className={classes.productRow}>\n            {stockStatus === null ?\n                <HelpOutlineIcon/>\n                :\n                stockStatus ?\n                    <RadioButtonCheckedIcon className={classes.inStock}/>\n                    :\n                    <RadioButtonUncheckedIcon className={classes.outOfStock}/>\n            }\n            <div className={classes.productDetailsBox}>\n                <div>{product.name}</div>\n                <div className={classes.productDetailsContainer}>\n                    {productDetails}\n                    <ColorDots product={product}/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ProductListRow\n","import React from 'react'\nimport ProductListRow from './ProductListRow'\nimport { FixedSizeList as List } from 'react-window'\nimport Typography from '@material-ui/core/Typography'\n\n\nconst ProductList = ({ products, availabilities }) => {\n\n    const WIDTH = Math.min(window.innerWidth * 0.9, 300)\n    const HEIGHT = window.innerHeight * 0.55\n    const ITEM_HEIGHT = 46\n\n    if (products.error) {\n        return (\n            <Typography>{products.error}</Typography>\n        )\n    }\n\n    const Row = ({ index, style }) => {\n        const product = products[index]\n        const status = availabilities === null || availabilities[product.id] === undefined ?\n            null\n            :\n            availabilities[product.id]\n        return (\n            <div style={style}>\n                <ProductListRow key={product.id} product={product} stockStatus={status} />\n            </div>\n        )\n    }\n\n    return (\n        <div style={{ margin: 5 }}>\n            <List\n                className=\"List\"\n                height={HEIGHT}\n                itemCount={products.length}\n                itemSize={ITEM_HEIGHT}\n                width={WIDTH}\n            >\n                {Row}\n            </List>\n        </div>\n    )\n}\n\nexport default ProductList\n\n\n\n\n\n","import React from 'react'\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked'\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked'\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline'\nimport Typography from '@material-ui/core/Typography'\nimport createStyles from '../warehouseStyles'\n\n\n\nconst StockStatusIconInfo = () => {\n\n    const classes = createStyles()\n\n    return (\n        <div className={classes.iconInfoContainer}>\n            <div className={classes.infoRow}>\n                <HelpOutlineIcon/>\n                <Typography>Waiting or data not available</Typography>\n            </div>\n            <div className={classes.infoRow}>\n                <RadioButtonUncheckedIcon className={classes.outOfStock}/>\n                <Typography>Not in stock</Typography>\n            </div>\n            <div className={classes.infoRow}>\n                <RadioButtonCheckedIcon className={classes.inStock}/>\n                <Typography>In stock</Typography>\n            </div>\n        </div>\n\n    )\n}\n\nexport default StockStatusIconInfo\n\n\n\n\n","import axios from 'axios'\n\nconst baseUrl = 'https://bad-api-assignment.reaktor.com'\n\n\nexport const fetchProductData = async (productGroup) => {\n    const response = await axios.get(`${baseUrl}/products/${productGroup}`)\n    return response.data\n}\n\n// user config when testing API malfunctioning\nexport const fetchManufacturerData = async (manufacturer) => {\n    // let config = {\n    //     headers: {\n    //         'x-force-error-mode': 'all',\n    //     },\n    // }\n    const response = await axios.get(`${baseUrl}/availability/${manufacturer}`)\n    // const response = await axios.get(`${baseUrl}/availability/${manufacturer}`, config)\n    return response.data\n}\n\n\n\n","import { fetchProductData, fetchManufacturerData } from '../services/service'\n\n\nasync function getProductDataSortAlphabetically(productGroup) {\n    try {\n        const fetchedData = await fetchProductData(productGroup)\n        const sortedData = fetchedData.sort((a, b) => a.name.localeCompare(b.name))\n        return sortedData\n    } catch (error) {\n        return { error: `Error in downloading ${productGroup} data.` }\n    }\n}\n\nasync function getManufacturerData(manufacturer) {\n    try {\n        const fetchedData = await fetchManufacturerData(manufacturer)\n        if (fetchedData.response === '[]') return []\n        return fetchedData.response\n    } catch (error) {\n        return []\n    }\n}\n\n\nfunction getManufacturerSet(productGroups) {\n    let manufacturers = new Set()\n    productGroups.forEach(group => {\n        group.forEach(item => {\n            if (!item.error) {\n                manufacturers.add(item.manufacturer)\n            }\n        })\n    })\n    return manufacturers\n}\n\nasync function getIdManufacturerDictionary(manufacturers) {\n    let promiseArray = []\n    manufacturers.forEach(manufacturer => {\n        promiseArray.push(getManufacturerData(manufacturer))\n    })\n    let idAndManufacturerDictionary = {}\n    const allPromisesResolved = await Promise.all(promiseArray)\n    allPromisesResolved.forEach(oneManufacturerResults => {\n        oneManufacturerResults.forEach(itemData => {\n            idAndManufacturerDictionary[itemData.id.toLowerCase()] = itemData.DATAPAYLOAD.toString().indexOf('>INSTOCK<') !== -1\n        })\n    })\n    return idAndManufacturerDictionary\n}\n\n\n\nexport async function fetchAndSetProductAndManufacturerData(setJackets, setShirts, setAccessories, setAvailabilities) {\n    const jacketsData = await getProductDataSortAlphabetically('jackets')\n    setJackets(jacketsData)\n    const shirtsData = await getProductDataSortAlphabetically('shirts')\n    setShirts(shirtsData)\n    const accessoriesData = await getProductDataSortAlphabetically('accessories')\n    setAccessories(accessoriesData)\n\n    let manufacturers = getManufacturerSet([jacketsData, shirtsData, accessoriesData])\n    const idManufacturerDictionary = await getIdManufacturerDictionary(manufacturers)\n    setAvailabilities(idManufacturerDictionary)\n}\n\n\nexport async function updateProductAndManufacturerData(setJackets, setShirts, setAccessories, setAvailabilities) {\n    const jacketsData = await getProductDataSortAlphabetically('jackets')\n    const shirtsData = await getProductDataSortAlphabetically('shirts')\n    const accessoriesData = await getProductDataSortAlphabetically('accessories')\n    let manufacturers = getManufacturerSet([jacketsData, shirtsData, accessoriesData])\n    const idManufacturerDictionary = await getIdManufacturerDictionary(manufacturers)\n    setJackets(jacketsData)\n    setShirts(shirtsData)\n    setAccessories(accessoriesData)\n    setAvailabilities(idManufacturerDictionary)\n}\n\n\n\n","import React, { useEffect, useState } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport ProductPageToggler from './components/ProductPageToggler'\nimport ProductList from './components/ProductList'\nimport StockStatusIconInfo from './components/StockStatusIconInfo'\nimport createStyles from './warehouseStyles'\nimport {  fetchAndSetProductAndManufacturerData, updateProductAndManufacturerData } from './helperFunctions/fetchDataFunctions'\n\n\nconst App = () => {\n\n    const [jackets, setJackets] = useState(null)\n    const [shirts, setShirts] = useState(null)\n    const [accessories, setAccessories] = useState(null)\n\n    const [availabilities, setAvailabilities] = useState(null)\n    const [selectedProductGroup, setSelectedProductGroup] = useState(null)\n\n    const classes = createStyles()\n    const UPDATE_INTERVAL = 1000 * 60 * 5\n\n\n    // Fetch data for the first time; show product list before item availability is known.\n    useEffect(() => {\n        fetchAndSetProductAndManufacturerData(setJackets, setShirts, setAccessories, setAvailabilities)\n    }, [])\n\n\n    // Update product and availability data later (every 5 minutes when API internal cache is refreshed.)\n    useEffect(() => {\n        const interval = setInterval(() => {\n            updateProductAndManufacturerData(setJackets, setShirts, setAccessories, setAvailabilities)\n        }, UPDATE_INTERVAL )\n        return () => clearInterval(interval)\n    }, [UPDATE_INTERVAL])\n\n\n    return (\n        <div className={classes.app}>\n\n            <Typography variant='h5'>\n                WHAT'S IN STOCK?\n            </Typography>\n            <Typography>Toggle to select a product group</Typography>\n            <ProductPageToggler selectedProductGroup={selectedProductGroup} setSelectedProductGroup={setSelectedProductGroup}/>\n\n            {selectedProductGroup === 'jackets' && jackets !== null && <ProductList products={jackets} availabilities={availabilities}/>}\n            {selectedProductGroup === 'shirts' && shirts !== null && <ProductList products={shirts} availabilities={availabilities}/>}\n            {selectedProductGroup === 'accessories' && accessories !== null && <ProductList products={accessories} availabilities={availabilities}/>}\n\n            {selectedProductGroup !== null &&\n                <>\n                    <Typography>Scroll down to view more items</Typography>\n                    <StockStatusIconInfo/>\n                </>\n            }\n        </div>\n    )\n}\n\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n)\n\n\n"],"sourceRoot":""}